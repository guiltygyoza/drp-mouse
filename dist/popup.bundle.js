(()=>{"use strict";var e={5433:(e,t)=>{t.getEmojiForNodeId=function(e){return`https://api.dicebear.com/7.x/bottts/svg?seed=${e.split("").reduce(((e,t)=>e+t.charCodeAt(0)),0)}`}}},t={},n=function n(o){var r=t[o];if(void 0!==r)return r.exports;var s=t[o]={exports:{}};return e[o](s,s.exports,n),s.exports}(5433);console.log("Popup script attempting to load");try{console.log("Window object:",window),console.log("Document object:",document)}catch(e){console.error("Error during initial load:",e)}console.log("Popup script loading"),window.addEventListener("error",(e=>{console.error("Script error:",{message:e.error?.message,stack:e.error?.stack,source:e.filename,line:e.lineno,column:e.colno})})),document.addEventListener("DOMContentLoaded",(async()=>{console.log("DOM Content Loaded");const e=document.getElementById("createNode"),t=document.getElementById("goLive"),o=document.getElementById("nodeList");function r(e){return e?`${e.slice(0,4)}...${e.slice(-4)}`:"Not connected"}function s(e){if(!e)return"ðŸ‘»";const t=(0,n.getEmojiForNodeId)(e),o=document.createElement("img");return o.src=t,o.style.width="24px",o.style.height="24px",o.style.verticalAlign="middle",o.style.marginRight="7px",o}async function i(e){const[n]=await chrome.tabs.query({active:!0,currentWindow:!0});document.getElementById("tabId").innerText=n?n.id:"No tab";const o=document.getElementById("peerId");if(o.innerHTML="",e?.peerId){o.appendChild(s(e.peerId));const t=document.createElement("span");t.style.textDecoration="underline",t.textContent=r(e.peerId),o.appendChild(t)}else o.innerText="Not connected";document.getElementById("peers").innerText=e?.peers?.map(r).join(", ")||"None",document.getElementById("discoveryPeers").innerText=e?.discoveryPeers?.map(r).join(", ")||"None",document.getElementById("drpId").innerText=e?.drpId||"no live drp",e?.drpId?(t.classList.add("active"),t.innerText="LIVE"):(t.classList.remove("active"),t.innerText="GO LIVE")}async function c(){console.log("Updating node list");const[e]=await chrome.tabs.query({active:!0,currentWindow:!0}),t=await chrome.runtime.sendMessage({type:"GET_NODES",tabId:e.id});console.log("Got nodes response:",t),o.innerHTML="",t.nodes.forEach((e=>{const n=document.createElement("div");n.className="node-item",e===t.activeNodeId&&n.classList.add("selected"),n.innerHTML="",n.appendChild(s(e)),n.appendChild(document.createTextNode(r(e))),n.addEventListener("click",(async()=>{const[t]=await chrome.tabs.query({active:!0,currentWindow:!0});await chrome.runtime.sendMessage({type:"SELECT_NODE",nodeId:e,tabId:t.id}),c();const n=await chrome.runtime.sendMessage({type:"GET_NODE_STATE",tabId:t.id});n&&!n.error&&i(n)})),o.appendChild(n)}))}console.log("Elements found:",{createNodeButton:e,goLiveButton:t,nodeList:o}),e.addEventListener("click",(async()=>{console.log("Create node clicked");const e=await chrome.runtime.sendMessage({type:"CREATE_NODE"});if(console.log("Create node response:",e),e){if(e.error)console.error("Error creating node:",e.error);else if(e.nodeId){await c();const e=await chrome.runtime.sendMessage({type:"GET_NODE_STATE"});e&&!e.error&&i(e)}}else console.error("No response received from background script")})),t.addEventListener("click",(()=>{chrome.tabs.query({active:!0,currentWindow:!0},(e=>{t.classList.contains("active")?(chrome.tabs.sendMessage(e[0].id,{type:"LEAVE_ROOM"}),t.classList.remove("active"),t.innerText="GO LIVE"):(console.log("popup: attempt to go live"),chrome.tabs.sendMessage(e[0].id,{type:"GO_LIVE"}),setTimeout((async()=>{const t=await chrome.runtime.sendMessage({type:"GET_NODE_STATE",tabId:e[0].id});t&&i(t)}),500))}))}));try{await c();const[e]=await chrome.tabs.query({active:!0,currentWindow:!0}),t=await chrome.runtime.sendMessage({type:"GET_NODE_STATE",tabId:e.id});await i(t||{})}catch(e){console.error("Error during initial setup:",e)}chrome.runtime.onMessage.addListener((async e=>{if("STATE_UPDATE"===e.type){const[t]=await chrome.tabs.query({active:!0,currentWindow:!0});t.id===e.tabId&&(i(e.state),c())}}))})),window.addEventListener("error",(e=>{console.error("Uncaught error:",e.error)}))})();