(()=>{const e=new Map,t=new Map;chrome.runtime.onMessage.addListener((async(s,a,d)=>{switch(s.type){case"BROADCAST":{const e=await chrome.tabs.query({active:!0,currentWindow:!0});for(const t of e)t.id&&s.tabId!==t.id&&chrome.tabs.sendMessage(t.id,{...s.message,tabId:t.id});break}case"UPDATE_CURSOR_POSITION":{if(!t.has(a.tab.id))return;const d=e.get(t.get(a.tab.id)),o=d.drpObjects.get(a.tab.id);o&&o.drp.updateCursor(d.node.networkNode.peerId,s.position);break}}return d({success:!0}),!0})),chrome.tabs.onUpdated.addListener(((s,a,d)=>{if(a.url&&t.has(s)){const d=e.get(t.get(s));chrome.tabs.sendMessage(s,{type:"URL_CHANGED",url:a.url,autoJoin:d.drpObjects.has(s)})}})),chrome.tabs.onRemoved.addListener((s=>{if(t.has(s)){const a=e.get(t.get(s)),d=a.drpObjects.get(s);d&&(a.node.objectStore.unsubscribe(d.id),a.drpObjects.delete(s))}})),chrome.runtime.onInstalled.addListener((()=>{console.log("DRP Mouse extension installed background")}))})();